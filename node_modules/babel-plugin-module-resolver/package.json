{
  "_args": [
    [
      {
        "raw": "babel-plugin-module-resolver@2.6.2",
        "scope": null,
        "escapedName": "babel-plugin-module-resolver",
        "name": "babel-plugin-module-resolver",
        "rawSpec": "2.6.2",
        "spec": "2.6.2",
        "type": "version"
      },
      "/Users/mhusnim/Documents/Task Project/belajar/compare-nextJS-and-antdesign/node_modules/next"
    ]
  ],
  "_from": "babel-plugin-module-resolver@2.6.2",
  "_id": "babel-plugin-module-resolver@2.6.2",
  "_inCache": true,
  "_location": "/babel-plugin-module-resolver",
  "_nodeVersion": "7.7.3",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/babel-plugin-module-resolver-2.6.2.tgz_1490915702965_0.7718537035398185"
  },
  "_npmUser": {
    "name": "tleunen",
    "email": "tommy.leunen@gmail.com"
  },
  "_npmVersion": "4.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-module-resolver@2.6.2",
    "scope": null,
    "escapedName": "babel-plugin-module-resolver",
    "name": "babel-plugin-module-resolver",
    "rawSpec": "2.6.2",
    "spec": "2.6.2",
    "type": "version"
  },
  "_requiredBy": [
    "/next"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-module-resolver/-/babel-plugin-module-resolver-2.6.2.tgz",
  "_shasum": "66845c8855865dd7fd4d5256be93272e3d16701d",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-module-resolver@2.6.2",
  "_where": "/Users/mhusnim/Documents/Task Project/belajar/compare-nextJS-and-antdesign/node_modules/next",
  "author": {
    "name": "Tommy Leunen",
    "email": "tommy.leunen@gmail.com",
    "url": "http://tommyleunen.com"
  },
  "bugs": {
    "url": "https://github.com/tleunen/babel-plugin-module-resolver/issues"
  },
  "dependencies": {
    "find-babel-config": "^1.0.1",
    "glob": "^7.1.1",
    "resolve": "^1.3.2"
  },
  "description": "Module resolver plugin for Babel",
  "devDependencies": {
    "babel-cli": "^6.24.0",
    "babel-core": "^6.24.0",
    "babel-jest": "^19.0.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.24.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-preset-env": "^1.2.2",
    "common-tags": "^1.4.0",
    "eslint": "^3.18.0",
    "eslint-config-airbnb-base": "^11.1.2",
    "eslint-plugin-import": "^2.2.0",
    "jest": "^19.0.2",
    "standard-version": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "66845c8855865dd7fd4d5256be93272e3d16701d",
    "tarball": "https://registry.npmjs.org/babel-plugin-module-resolver/-/babel-plugin-module-resolver-2.6.2.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "c38034c3d9f1b7020243e619cf6b1a5eb4fa55fc",
  "greenkeeper": {
    "ignore": [
      "babel-jest",
      "eslint",
      "eslint-plugin-import"
    ]
  },
  "homepage": "https://github.com/tleunen/babel-plugin-module-resolver#readme",
  "jest": {
    "testRegex": "/test/.*\\.test\\.js$",
    "collectCoverageFrom": [
      "src/**/*.js"
    ]
  },
  "keywords": [
    "babel",
    "babel-plugin",
    "module",
    "resolver",
    "alias",
    "rewrite",
    "resolve",
    "rename",
    "mapping",
    "require",
    "import"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "tleunen",
      "email": "tommy.leunen@gmail.com"
    }
  ],
  "name": "babel-plugin-module-resolver",
  "optionalDependencies": {},
  "readme": "# babel-plugin-module-resolver\n[![Maintenance Status][status-image]][status-url] [![NPM version][npm-image]][npm-url] [![Build Status Linux][circleci-image]][circleci-url] [![Build Status Windows][appveyor-image]][appveyor-url] [![Coverage Status][coverage-image]][coverage-url]\n\nA [Babel](http://babeljs.io) plugin to add a new resolver for your modules when compiling your code using Babel. This plugin allows you to add new \"root\" directories that contain your modules. It also allows you to setup a custom alias for directories, specific files, or even other npm modules.\n\n## Description\n\nThis plugin can simplify the require/import paths in your project. For example, instead of using complex relative paths like `../../../../utils/my-utils`, you can write `utils/my-utils`. It will allow you to work faster since you won't need to calculate how many levels of directory you have to go up before accessing the file.\n\n```js\n// Use this:\nimport MyUtilFn from 'utils/MyUtilFn';\n// Instead of that:\nimport MyUtilFn from '../../../../utils/MyUtilFn';\n\n// And it also work with require calls\n// Use this:\nconst MyUtilFn = require('utils/MyUtilFn');\n// Instead of that:\nconst MyUtilFn = require('../../../../utils/MyUtilFn');\n```\n\n## Usage\n\nIf you're coming from babel-plugin-module-alias, please read this section: Updating from [babel-plugin-module-alias](#updating-from-babel-plugin-module-alias).\n\nInstall the plugin\n\n```\n$ npm install --save-dev babel-plugin-module-resolver\n```\n\nSpecify the plugin in your `.babelrc` with the custom root or alias. Here's an example:\n```json\n{\n  \"plugins\": [\n    [\"module-resolver\", {\n      \"root\": [\"./src\"],\n      \"alias\": {\n        \"test\": \"./test\",\n        \"underscore\": \"lodash\"\n      }\n    }]\n  ]\n}\n```\n\n### Options\n\n- `root`: Array of root directories. Specify the paths or a glob path (eg. `./src/**/components`)\n- `alias`: Map of alias. You can also alias node_modules dependencies, not just local files.\n- `extensions`: Array of extensions used in the resolver. Override the default extensions (`['.js', '.jsx', '.es', '.es6']`).\n- `cwd`: By default, the working directory is the one used for the resolver, but you can override it for your project.\n    - The custom value `babelrc` will make the plugin look for the closest babelrc configuration based on the file to parse.\n\n### Regular expression alias\n\nIt is possible to specify an alias using a regular expression. To do that, either start an alias with `'^'` or end it with `'$'`:\n\n```json\n{\n  \"plugins\": [\n    [\"module-resolver\", {\n      \"alias\": {\n        \"^@namespace/foo-(.+)\": \"packages/\\\\1\"\n      }\n    }]\n  ]\n}\n```\n\nUsing the config from this example `'@namespace/foo-bar'` will become `'packages/bar'`.\n\nYou can reference the n-th matched group with `'\\\\n'` (`'\\\\0'` refers to the whole matched path).\n\nTo use the backslash character (`\\`) just escape it like so: `'\\\\\\\\'` (double escape is needed because of JSON already using `\\` for escaping).\n\n### Updating from babel-plugin-module-alias\n\nbabel-plugin-module-resolver is a new version of the old babel-plugin-module-alias. Therefore, you also need to make a few modifications to your plugin configuration to make it work with this new plugin.\n\nUpdating is very easy. For example, if you had this configuration:\n```json\n// This configuration is outdated, this is just an example\n{\n  \"plugins\": [\n    [\"module-alias\", [\n      { \"src\": \"./src/utils\", \"expose\": \"utils\" },\n      { \"src\": \"./src/components\", \"expose\": \"components\" },\n      { \"src\": \"./src/actions\", \"expose\": \"actions\" },\n      { \"src\": \"npm:lodash\", \"expose\": \"underscore\" }\n    ]]\n  ]\n}\n```\nYou only have to update the plugin options to be like this:\n```json\n{\n  \"plugins\": [\n      [\"module-resolver\", {\n        \"root\": [\"./src\"],\n        \"alias\": {\n          \"underscore\": \"lodash\"\n        }\n      }]\n    ]\n}\n```\n\n## ESLint plugin\n\nIf you're using ESLint, you should use [eslint-plugin-import][eslint-plugin-import], and [eslint-import-resolver-babel-module][eslint-import-resolver-babel-module] to remove falsy unresolved modules.\n\n## Usage with Flow\n\nTo allow Flow to find your modules, add configuration options\nto `.flowconfig`.\n\nFor example, a React component is located at `src/components/Component.js`\n\n```js\n// Before\nimport '../../src/components/Component';\n\n// After - Flow cannot find this now\nimport 'components/Component';\n```\n\nInstruct Flow where to resolve modules from:\n\n```\n# .flowconfig\n\n[options]\nmodule.system.node.resolve_dirname=node_modules\nmodule.system.node.resolve_dirname=src\n```\n\nBe sure to add any sub-directories if you refer to files further down the\ndirectory tree:\n\n```js\n// Located at src/store/actions\nimport 'actions/User'\n```\n```\nmodule.system.node.resolve_dirname=src/store\n```\n\nMore configuration options are located in [the Flow documentation](https://flowtype.org/docs/advanced-configuration.html)\n\n## Editors autocompletion\n\n- Atom: Uses [atom-autocomplete-modules][atom-autocomplete-modules] and enable the `babel-plugin-module-resolver` option.\n- IntelliJ/WebStorm: You can add custom resources root directories, make sure it matches what you have in this plugin.\n\n## License\n\nMIT, see [LICENSE.md](/LICENSE.md) for details.\n\n\n[status-image]: https://img.shields.io/badge/status-maintained-brightgreen.svg\n[status-url]: https://github.com/tleunen/babel-plugin-module-resolver\n\n[npm-image]: https://img.shields.io/npm/v/babel-plugin-module-resolver.svg\n[npm-url]: https://www.npmjs.com/package/babel-plugin-module-resolver\n\n[circleci-image]: https://img.shields.io/circleci/project/tleunen/babel-plugin-module-resolver/master.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSItMTQyLjUgLTE0Mi41IDI4NSAyODUiPjxjaXJjbGUgcj0iMTQxLjciIGZpbGw9IiNERDQ4MTQiLz48ZyBpZD0iYSIgZmlsbD0iI0ZGRiI%2BPGNpcmNsZSBjeD0iLTk2LjQiIHI9IjE4LjkiLz48cGF0aCBkPSJNLTQ1LjYgNjguNGMtMTYuNi0xMS0yOS0yOC0zNC00Ny44IDYtNSA5LjgtMTIuMyA5LjgtMjAuNnMtMy44LTE1LjctOS44LTIwLjZjNS0xOS44IDE3LjQtMzYuNyAzNC00Ny44bDEzLjggMjMuMkMtNDYtMzUuMi01NS4zLTE4LjctNTUuMyAwYzAgMTguNyA5LjMgMzUuMiAyMy41IDQ1LjJ6Ii8%2BPC9nPjx1c2UgeGxpbms6aHJlZj0iI2EiIHRyYW5zZm9ybT0icm90YXRlKDEyMCkiLz48dXNlIHhsaW5rOmhyZWY9IiNhIiB0cmFuc2Zvcm09InJvdGF0ZSgyNDApIi8%2BPC9zdmc%2B\n[circleci-url]: https://circleci.com/gh/tleunen/babel-plugin-module-resolver\n\n[appveyor-image]: https://img.shields.io/appveyor/ci/tleunen/babel-plugin-module-resolver/master.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgd2lkdGg9IjEyOCIgaGVpZ2h0PSIxMjgiIHZpZXdCb3g9IjAgMCAxMjggMTI4Ij48ZyBmaWxsPSIjMUJBMUUyIiB0cmFuc2Zvcm09InNjYWxlKDgpIj48cGF0aCBkPSJNMCAyLjI2NWw2LjUzOS0uODg4LjAwMyA2LjI4OC02LjUzNi4wMzd6Ii8%2BPHBhdGggZD0iTTYuNTM2IDguMzlsLjAwNSA2LjI5My02LjUzNi0uODk2di01LjQ0eiIvPjxwYXRoIGQ9Ik03LjMyOCAxLjI2MWw4LjY3LTEuMjYxdjcuNTg1bC04LjY3LjA2OXoiLz48cGF0aCBkPSJNMTYgOC40NDlsLS4wMDIgNy41NTEtOC42Ny0xLjIyLS4wMTItNi4zNDV6Ii8%2BPC9nPjwvc3ZnPg==\n[appveyor-url]: https://ci.appveyor.com/project/tleunen/babel-plugin-module-resolver\n\n[coverage-image]: https://codecov.io/gh/tleunen/babel-plugin-module-resolver/branch/master/graph/badge.svg\n[coverage-url]: https://codecov.io/gh/tleunen/babel-plugin-module-resolver\n\n[eslint-import-resolver-babel-module]: https://github.com/tleunen/eslint-import-resolver-babel-module\n[eslint-plugin-import]: https://github.com/benmosher/eslint-plugin-import\n[atom-autocomplete-modules]: https://github.com/nkt/atom-autocomplete-modules\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tleunen/babel-plugin-module-resolver.git"
  },
  "scripts": {
    "compile": "babel src --out-dir lib",
    "lint": "eslint src test",
    "prepublish": "npm run compile",
    "pretest": "npm run lint",
    "release": "standard-version",
    "test": "jest --coverage",
    "test:suite": "jest",
    "test:watch": "jest --watch"
  },
  "version": "2.6.2"
}
