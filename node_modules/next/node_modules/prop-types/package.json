{
  "_args": [
    [
      {
        "raw": "prop-types@15.5.7",
        "scope": null,
        "escapedName": "prop-types",
        "name": "prop-types",
        "rawSpec": "15.5.7",
        "spec": "15.5.7",
        "type": "version"
      },
      "/Users/mhusnim/Documents/Task Project/belajar/compare-nextJS-and-antdesign/node_modules/next"
    ]
  ],
  "_from": "prop-types@15.5.7",
  "_id": "prop-types@15.5.7",
  "_inCache": true,
  "_location": "/next/prop-types",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/prop-types-15.5.7.tgz_1491937050135_0.821221690159291"
  },
  "_npmUser": {
    "name": "gaearon",
    "email": "dan.abramov@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "prop-types@15.5.7",
    "scope": null,
    "escapedName": "prop-types",
    "name": "prop-types",
    "rawSpec": "15.5.7",
    "spec": "15.5.7",
    "type": "version"
  },
  "_requiredBy": [
    "/next"
  ],
  "_resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.5.7.tgz",
  "_shasum": "231c4f29cdd82e355011d4889386ca9059544dd1",
  "_shrinkwrap": null,
  "_spec": "prop-types@15.5.7",
  "_where": "/Users/mhusnim/Documents/Task Project/belajar/compare-nextJS-and-antdesign/node_modules/next",
  "bugs": {
    "url": "https://github.com/reactjs/prop-types/issues"
  },
  "dependencies": {
    "fbjs": "^0.8.9"
  },
  "description": "Runtime type checking for React props and similar objects.",
  "devDependencies": {
    "babel-jest": "^19.0.0",
    "babel-preset-react": "^6.24.1",
    "browserify": "^14.3.0",
    "bundle-collapser": "^1.2.1",
    "envify": "^4.0.0",
    "jest": "^19.0.2",
    "react": "^15.5.1",
    "uglifyify": "^3.0.4",
    "uglifyjs": "^2.4.10"
  },
  "directories": {},
  "dist": {
    "shasum": "231c4f29cdd82e355011d4889386ca9059544dd1",
    "tarball": "https://registry.npmjs.org/prop-types/-/prop-types-15.5.7.tgz"
  },
  "files": [
    "LICENSE",
    "PATENTS",
    "README.md",
    "checkPropTypes.js",
    "factory.js",
    "factoryWithThrowingShims.js",
    "factoryWithTypeCheckers.js",
    "index.js",
    "prop-types.js",
    "prop-types.min.js",
    "lib"
  ],
  "gitHead": "190d3a4a2a572e85031bd47ed846170c077e34b7",
  "homepage": "https://facebook.github.io/react/",
  "keywords": [
    "react"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "acdlite",
      "email": "acdlite@me.com"
    },
    {
      "name": "brianvaughn",
      "email": "briandavidvaughn@gmail.com"
    },
    {
      "name": "flarnie",
      "email": "flarnie.npm@gmail.com"
    },
    {
      "name": "gaearon",
      "email": "dan.abramov@gmail.com"
    },
    {
      "name": "sebmarkbage",
      "email": "sebastian@calyptus.eu"
    },
    {
      "name": "spicyj",
      "email": "ben@benalpert.com"
    },
    {
      "name": "theron",
      "email": "theron17@gmail.com"
    },
    {
      "name": "tomocchino",
      "email": "tomocchino@gmail.com"
    },
    {
      "name": "trueadm",
      "email": "dg@domgan.com"
    }
  ],
  "name": "prop-types",
  "optionalDependencies": {},
  "readme": "# prop-types\n\nRuntime type checking for React props and similar objects.\n\n## Installation\n\n```\nnpm install --save prop-types\n```\n\n## Importing\n\n```js\nimport PropTypes from 'prop-types'; // ES6\nvar PropTypes = require('prop-types'); // ES5 with npm\n```\n\nIf you prefer a `<script>` tag, you can get it from `window.PropTypes` global:\n\n```html\n<!-- development version -->\n<script src=\"https://unpkg.com/prop-types/prop-types.js\"></script>\n \n<!-- production version -->\n<script src=\"https://unpkg.com/prop-types/prop-types.min.js\"></script>\n```\n\n## Difference from `React.PropTypes`: Don’t Call Validator Functions\n\nWhen you migrate components to use the standalone `prop-types`, **all validator functions will start throwing an error if you call them directly**. This makes sure that nobody relies on them in production code, and it is safe to strip their implementations to optimize the bundle size.\n\nCode like this is still fine:\n\n```js\nMyComponent.propTypes = {\n  myProp: PropTypes.bool\n};\n```\n\nHowever, code like this will not work with the `prop-types` package:\n\n```js\n// Will not work with `prop-types` package!\nvar errorOrNull = PropTypes.bool(42, 'myProp', 'MyComponent', 'prop');\n```\n\nIt will throw an error:\n\n```\nCalling PropTypes validators directly is not supported by the `prop-types` package.\nUse PropTypes.checkPropTypes() to call them.\n```\n\nThis is new behavior, and you will only encounter it when you migrate from `React.PropTypes` to the `prop-types` package. For the vast majority of components, this doesn’t matter, and if you didn’t see [this warning](https://facebook.github.io/react/warnings/dont-call-proptypes.html) in your components, your code is safe to migrate. This is not a breaking change in React because you are only opting into this change for a component by explicitly changing your imports to use `prop-types`. If you temporarily need the old behavior, you can keep using `React.PropTypes` until React 16.\n\n**If you absolutely need to trigger the validation manually**, call `PropTypes.checkPropTypes()`. Unlike the validators themselves, this function is safe to call in production, as it will be replaced by an empty function:\n\n```js\n// Works with standalone PropTypes\nPropTypes.checkPropTypes(MyComponent.propTypes, props, 'prop', 'MyComponent');\n```\n\n**You might also see this error** if you’re calling a `PropTypes` validator from your own custom `PropTypes` validator. In this case, the fix is to make sure that you are passing *all* of the arguments to the inner function. There is a more in-depth explanation of how to fix it [on this page](https://facebook.github.io/react/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes). Alternatively, you can temporarily keep using `React.PropTypes` until React 16, as it would still only warn in this case.\n\nIf you use a bundler like Browserify or Webpack, don’t forget to [follow these instructions](https://facebook.github.io/react/docs/installation.html#development-and-production-versions) to correctly bundle your application in development or production mode. Otherwise you’ll ship unnecessary code to your users.\n\n## Usage\n\nRefer to the [React documentation](https://facebook.github.io/react/docs/typechecking-with-proptypes.html) for more information.\n\n## Migrating from React.PropTypes\n\nCheck out [Migrating from React.PropTypes](https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html#migrating-from-react.proptypes) for details on how to migrate to `prop-types` from `React.PropTypes`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reactjs/prop-types.git"
  },
  "scripts": {
    "build": "yarn umd && yarn umd-min",
    "prepublish": "yarn build",
    "test": "jest",
    "umd": "NODE_ENV=development browserify index.js -t envify --standalone PropTypes -o prop-types.js",
    "umd-min": "NODE_ENV=production browserify index.js -t envify -t uglifyify --standalone PropTypes  -p bundle-collapser/plugin -o | uglifyjs --compress unused,dead_code -o prop-types.min.js"
  },
  "version": "15.5.7"
}
